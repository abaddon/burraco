/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.abaddon83

import com.abaddon83.burracoGame.writeModel.ports.WriteModelControllerPort
import com.abaddon83.burracoGame.api.handleExceptions.errorsHandling
import com.abaddon83.burracoGame.localEventStore.EventStoreInMemory
import com.abaddon83.burracoGame.readModel.adapters.EventListenerAdapter
import com.abaddon83.burracoGame.readModel.adapters.ReadModelRepositoryInMemoryAdapter
import com.abaddon83.burracoGame.readModel.adapters.readModelRestAdapter.ReadModelControllerAdapter
import com.abaddon83.burracoGame.readModel.adapters.readModelRestAdapter.queryApiBurracoGames
import com.abaddon83.burracoGame.readModel.ports.ReadModelControllerPort
import com.abaddon83.burracoGame.writeModel.adapters.commandControllerRestAdapters.WriteModelControllerRestAdapter
import com.abaddon83.burracoGame.writeModel.adapters.commandControllerRestAdapters.commandApiBurracoGames
import com.abaddon83.burracoGame.writeModel.adapters.eventStoreInMemories.EventStoreInMemoryAdapter
import com.abaddon83.burracoGame.writeModel.ports.EventStore
import com.fasterxml.jackson.databind.SerializationFeature
import io.ktor.application.Application
import io.ktor.application.install
import io.ktor.features.*
import io.ktor.http.ContentType
import io.ktor.jackson.JacksonConverter
import io.ktor.jackson.jackson
import io.ktor.routing.Routing
import io.ktor.server.engine.commandLineEnvironment
import io.ktor.server.engine.embeddedServer
import io.ktor.server.netty.Netty

//class App {
//    val greeting: String
//        get() {
//            return "Hello world."
//        }
//}
//
//fun main(args: Array<String>) {
//    println(App().greeting)
//}

//fun Application.di() {
//    //DI setup
//    install(Koin) {
//        printLogger()
//        modules(AppAdapters)
//    }
//}

fun Application.main() {
    //read model
    val readModelRepository= ReadModelRepositoryInMemoryAdapter()
    val readModelEventListener = EventListenerAdapter(readModelRepository)
    EventStoreInMemory.addListener(readModelEventListener)
    val burracoGameReadModelController: ReadModelControllerPort = ReadModelControllerAdapter(readModelRepository)

    // write model
    val eventStore: EventStore = EventStoreInMemoryAdapter() //eventStore adapter
    val burracoGameWriteModelController: WriteModelControllerPort = WriteModelControllerRestAdapter(eventStore)




    //HTTP
    install(DefaultHeaders)
    install(CallLogging)
    install(ContentNegotiation) {
        jackson {
            configure(SerializationFeature.INDENT_OUTPUT, true)
            register(ContentType.Application.Json, JacksonConverter())
        }
    }

    install(StatusPages) {
        errorsHandling()
    }
    install(Routing) {
        commandApiBurracoGames(burracoGameWriteModelController)
        queryApiBurracoGames(burracoGameReadModelController)
        //apiGames(burracoGameCommandController,burracoGameReadModelController)
        //apiBurracoGames(burracoGameCommandController,burracoGameReadModelController)
    }
}

fun main(args: Array<String>) {
    embeddedServer(Netty, commandLineEnvironment(args)).start()
}
